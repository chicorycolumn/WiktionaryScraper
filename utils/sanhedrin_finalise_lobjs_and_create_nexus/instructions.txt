SANHEDRIN STAGES

These stages are to collect several SOURCE (probably Polish) files of lobjs into one batch,
and then process that into final forms for adding to BE.

This means creating the corresponding TARGET (probably English) lobjs,
and then creating the Nexus objects that connect them.



- - - - - - - - - - - - - - - - - - - - - - - - - - PHASE ONE - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                    Gather into SRC batch and clean up the tags.


1A) Run "S01_create_src_batch.py"
    - to gather scraped and tagged files into one batch
    Creates "nou_batch_01_SRC_original.json"



1B) Run "S02_doublecheck_trans_of_src_lobjs.py"
    - to finalise translations of Source lobjs
    Creates "nou_batch_01_SRC.json"



1C) Now you manually go through the generated file and search for flags. Resolve them.
    - üö©  A flag you added in step B) with your own notes.
    - üèÅ  Add shorthand tags and topics to this duplicated lobj.
    - ‚õ≥  Add signal word eg "pol-nco-005-nail(bodypart)" vs "pol-nco-006-nail(metal)".
    You are modifying "nou_batch_01_SRC.json"



1D-i)   Run "S03_expand_tags.py"
        - to expand any shorthand tags you have added to "nou_batch_01_SRC.json" in step C)
        Modifies "nou_batch_01_SRC.json"

1D-ii)  Regex search for "" and "[qwertyuiopasdghjklzxcvb ]" in SRC file.
        - to catch badly generated tags.



1E) Run "S04_renumber_lobjs.py" with "SRC" argument.
    - to standardise numbering after lobj duplication in step B)
    Modifies "nou_batch_01_SRC.json"



- - - - - - - - - - - - - - - - - - - - - - - - - - PHASE TWO - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                        Create TGT and NEX for this batch.


2A) Run "S05_create_tgt_lobjs.py"
    - to create Target lobjs from the Source ones
    Creates "nou_batch_01_TGT.json"



2B) Run "S06_distinguish_sibling_tgt_lobjs.py"
    - to delete any unnecessary siblings in the newly created Target lobjs
    - to add signal words to the newly created Target lobjs
    Modifies "nou_batch_01_TGT.json"



2C) Run "S04_renumber_lobjs.py" with "TGT" argument
    - to standardise numbering after merging and deleting in step G)
    Modifies "nou_batch_01_TGT.json"



2D-i)   Run "S07_add_frequency_and_register_to_src.py"
        - to move "FREQ", "slang", "insult", "curseword" out of tags and into own key
        Modifies "nou_batch_01_SRC.json"

2D-ii)  Run "S08_add_frequency_and_register_to_tgt.py"
        - automatically populate frequency and register from SRC onto TGT
        Modifies "nou_batch_01_TGT.json"

2D-iii) Run "S09_doublecheck_frequency_on_tgt.py" with step=1 arg then step=2.
        - doublecheck the automatically populated frequency on TGT
        Modifies "nou_batch_01_TGT.json"



2E) Run "S10_create_nexus.py".
    - to connect Source and Target lobjs using the translations data from previous steps.
    Creates "nou_batch_01_NEX.json"



- - - - - - - - - - - - - - - - - - - - - - - - - - PHASE THREE - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                        Enhancing lobjs in both SRC and TGT.


From now on, if you add or remove lobjs from TGT or SRC files, you must then run the following
supplemental stages otherwise the ID links between NEX and TGT/SRC will be broken.
    "X2_renumber_src_lobjs_in_src_and_nex.py" and "X3_renumber_tgt_lobjs_in_tgt_and_nex.py"
    Modifies "nou_batch_01_NEX.json"
    Modifies "nou_batch_01_SRC.json"
    Modifies "nou_batch_01_TGT.json"



You probably just want to run this next double-step for SRC (Polish).
It's a data saver to crunch down lobjs with identical inflections.

3A-i)   Run "S11_reorder_keys_of_lobjs.py" for the set of lobjs you will run "S12_connect_sibling_lobjs.py" for.
        - to standardise order of inflection keys to allow correct comparisons by S12 stage.
        Modifies "nou_batch_01_{tgt or src}.json"

3A-ii)  Run "S12_connect_sibling_lobjs.py" for a set of lobjs.
        - to compact data by removing duplicated inflection data, replacing with reference to the one sibling which holds it
        Modifies "nou_batch_01_{tgt or src}.json"



If you did not add additional spellings in step 1B), run this step, probably just for TGT (English).
It uses additionalSpellings that you manually type into this stage.

3B) Run "S13_add_additional_spellings.py"
    - to add American spellings to eng lobjs
    Modifies "nou_batch_01_{tgt or src}.json"



3C)     Do a final search in NEX, SRC, TGT files for     *   and   √æ
        - to manually resolve these artefacts
        Modifies "nou_batch_01_{tgt,src,nex}.json"



3D-i)   Run "S14_add_allohom_info.py" for TGT and SRC
        - to manually create allohomInfo where needed
        Modifies "nou_batch_01_{tgt,src}.json"

3D-ii)  Run "S15_doublecheck_allohom_info.py" for TGT and SRC
        - to add allohom info to any lobjs which missed it
        Modifies "nou_batch_01_{tgt,src}.json"

3D-iii) Rerun "S14_add_allohom_info.py" for TGT and SRC
        Modifies "nou_batch_01_{tgt,src}.json"

3D-iv)  Rerun "S12_connect_sibling_lobjs.py" for SRC
        Modifies "nou_batch_01_src.json"



- - - - - - - - - - - - - - - - - - - - - - - - - - PHASE FOUR - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                            Check for unused or unmatched lobjs in SRC and TGT.


4A) Run "S16_check_for_unused_lobjs.py" and resolve these.
    Prints a list of unused and nonexistent lobjs in SRC and TGT.



- - - - - - - - - - - - - - - - - - - - - - - - - - PHASE FIVE - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                        Create inflection data for TGT.


5A) Run "S17_create_inflection_data.py" [yet to make this file] to create the inflection data for the TGT lobjs (presumably English)
    - to complete TGT lobjs
    Modifies "nou_batch_01_tgt.json"



5B) Run "S12_connect_sibling_lobjs.py" for TGT
    - to compact data by removing duplicated inflection data, replacing with reference to the one sibling which holds it
    Modifies "nou_batch_01_tgt.json"



5C) Remove now-unneeded data from SRC and TGT
    such as "translations", "¬ªtranslations", "tags", "topics"



- - - - - - - - - - - - - - - - - - - - - - - - - - PHASE SIX - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                                                   Final tasks.


6A) Resolve any "T\ODO.txt" items for this wordtype

6B) Resolve any TSFs (tasks of scraping finalising) for this wordtype from NOTES.txt