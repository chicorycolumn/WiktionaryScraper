SANHEDRIN STAGES

After collecting several Source (probably Polish) lobjs files into one batch,
we now process them into final forms for adding to BE.

This means creating the corresponding Target (probably English) lobjs,
and then creating the Nexus objects that connect them.



A)  Run "S01_create_src_batch.py"
    - to gather scraped and tagged files into one batch
    Creates "nou_batch_01_SRC_original.json"



B)  Run "S02_doublecheck_trans_of_src_lobjs.py"
    - to finalise translations of Source lobjs
    Creates "nou_batch_01_SRC.json"



C)  Now you manually go through the generated file and search for flags. Resolve them.
    - üö©  A flag you added in step B) with your own notes.
    - üèÅ  Add shorthand tags and topics to this duplicated lobj.
    - ‚õ≥  Add signal word eg "pol-nco-005-nail(bodypart)" vs "pol-nco-006-nail(metal)".
    You are modifying "nou_batch_01_SRC.json"



D1) Run "S03_expand_tags.py"
    - to expand any shorthand tags you have added to "nou_batch_01_SRC.json" in step C)
    Modifies "nou_batch_01_SRC.json"

D2) Regex search for "" and "[qwertyuiopasdghjklzxcvb ]" in newly created SRC file.
    - to catch badly generated tags.



E)  Run "S04_renumber_lobjs.py" with "SRC" argument.
    - to standardise numbering after lobj duplication in step B)
    Modifies "nou_batch_01_SRC.json"



F)  Run "S05_create_tgt_lobjs.py"
    - to create Target lobjs from the Source ones
    Creates "nou_batch_01_TGT.json"



G)  Run "S06_distinguish_sibling_tgt_lobjs.py"
    - to delete any unnecessary siblings in the newly created Target lobjs
    - to add signal words to the newly created Target lobjs
    Modifies "nou_batch_01_TGT.json"



H)  Run "S04_renumber_lobjs.py" with "TGT" argument
    - to standardise numbering after merging and deleting in step G)
    Modifies "nou_batch_01_TGT.json"



I1)  Run "S07_add_frequency_and_register_to_src.py"
    - to move "FREQn", ""slang", "insult", "curseword" out of tags and into own key
    Modifies "nou_batch_01_SRC.json"

I2)  Run "S08_add_frequency_and_register_to_tgt.py"
    - automatically populate frequency and register from SRC onto TGT
    Modifies "nou_batch_01_TGT.json"



J1) Run "S09_doublecheck_frequency_on_tgt.py" with step=1 arg then step=2.
    - doublecheck the automatically populated frequency on TGT
    Modifies "nou_batch_01_TGT.json"



K)  Run "S10_create_nexus.py".
    - to connect Source and Target lobjs using the translations data from previous steps.
    Creates "nou_batch_01_NEX.json"

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

From now on, if you add or remove lobjs from TGT or SRC files, you must then run the following
supplemental stages otherwise the ID links between NEX and TGT/SRC will be broken.
    "X2_renumber_src_lobjs_in_src_and_nex.py" and "X3_renumber_tgt_lobjs_in_tgt_and_nex.py"
    Modifies "nou_batch_01_NEX.json"
    Modifies "nou_batch_01_SRC.json"
    Modifies "nou_batch_01_TGT.json"



L1) Run "S11_reorder_keys_of_lobjs.py" for the set of lobjs you will run "S12_connect_sibling_lobjs.py" for.
    - to standardise order of inflection keys to allow correct comparisons by S12 stage.
    Modifies "nou_batch_01_{tgt or src}.json"

L2) Run "S12_connect_sibling_lobjs.py" for a set of lobjs.
    - to compact data by removing duplicated inflection data, replacing with reference to the one sibling which holds it
    Modifies "nou_batch_01_{tgt or src}.json"



M)  Run "S13_add_additional_spellings.py".
    - to add American spellings to eng lobjs if you did not add them during step B)
    Modifies "nou_batch_01_{tgt or src}.json"